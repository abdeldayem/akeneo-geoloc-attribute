{% extends 'PimUIBundle:Form:pim-fields.html.twig' %}

{% block cleverage_form_geolocation_widget %}
    {{ block('form_rest') }}

    <input data-addresspiker="{{ id }}_address"
           class="geolocation-address"
           type="text" placeholder="{{ 'geolocation.attribute.message.enter_address'|trans }}">
    <div data-addresspiker="{{ id }}_map" class="geolocation-map"></div>

    <script type="text/javascript" charset="utf-8">
        require([
            'jquery',
            'addresspicker',
            'async!https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places'
            ],function ($) {

            var geolocation = {
                $latitude: $('#{{ id }}_latitude'),
                $longitude: $('#{{ id }}_longitude'),
                $address: $('[data-addresspiker="{{ id }}_address"]'),
                $addressPicker: null,

                init: function() {
                    var addressPicker = new AddressPicker({
                        map: {
                            zoom: 5,
                            id: '[data-addresspiker="{{ id }}_map"]',
                            center: new google.maps.LatLng(this.getLatitude(), this.getLongitude())
                        },
                        marker: {
                            visible: true
                        }
                    });

                    this.$addressPicker = $(addressPicker);
                    this.$addressPicker.on('addresspicker:selected', $.proxy(this.updateCoordinates, this));

                    this.$address.typeahead(null, {
                        displayKey: 'description',
                        source: addressPicker.ttAdapter()
                    }).bind({
                        'typeahead:selected': addressPicker.updateMap,
                        'typeahead:cursorchanged': addressPicker.updateMap
                    });

                    return this;
                },

                listen:  function() {
                    var that = this;

                    // The attribute is not on an opened tab
                    $(document).on('click', 'a[data-toggle="tab"]', function() {
                        setTimeout($.proxy(that.init, that), 200);
                    });

                    // Mass attribute edition
                    $(document).on('click', '.ui-multiselect-footer .btn.btn-small', function() {
                        setTimeout($.proxy(that.init, that), 200);
                    });

                    return this;
                },

                getLatitude: function() {
                    var latitude = this.$latitude.val();

                    return '' == latitude ? 42 : latitude;
                },

                getLongitude: function() {
                    var longitude = this.$longitude.val();

                    return '' == longitude ? 2 : longitude;
                },

                updateCoordinates: function(event, result) {
                    this.$latitude.val(result.lat());
                    this.$longitude.val(result.lng());
                }
            };

            $( function() {
                geolocation.init();
                geolocation.listen();
            });
        });
    </script>
{% endblock %}
